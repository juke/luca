<section class="min-h-screen flex flex-col items-center justify-center py-24 relative overflow-hidden">
    <!-- Background Effects -->
    <div class="absolute inset-0 bg-gradient-to-b from-[#1a1a2e] to-[#0f0f1a] z-0"></div>
    <div class="absolute inset-0 bg-[url('/images/grid.svg')] opacity-5 z-0"></div>
    <div class="vignette"></div>
    
    <!-- Animated Background Particles -->
    <div class="particles absolute inset-0 z-0 opacity-30"></div>

    <div class="relative z-10 w-full max-w-3xl mx-auto px-4 space-y-16">
        <!-- LUCA Logo -->
        <div class="transform hover:scale-105 transition-transform floating">
            <img 
                src="/images/logo.png" 
                alt="LUCA Logo" 
                class="w-[500px] h-auto mx-auto pixel-perfect"
            />
        </div>

        <!-- Main Tagline -->
        <div class="space-y-6">
            <h1 class="text-3xl md:text-5xl font-bold text-center pixel-text glitch">
                From Sad to Happy:<br/>
                <span class="neon-text inline-block mt-4">
                    $LUCA's Journey
                </span>
            </h1>

            <!-- Token Info -->
            <div class="text-center">
                <p class="text-xl mb-6 text-purple-200 pixel-text-sm">Total Supply: 1,000,000,000 $LUCA</p>
                <div class="flex flex-wrap justify-center gap-3">
                    <span class="pixel-border px-6 py-3 text-pink-200">No Presale</span>
                    <span class="pixel-border px-6 py-3 text-pink-200">No Team Tokens</span>
                    <span class="pixel-border px-6 py-3 text-pink-200">100% Community-Driven</span>
                </div>
            </div>
        </div>

        <!-- LUCA Progression States -->
        <div class="relative aspect-square max-w-[300px] mx-auto">
            <div class="absolute inset-0 bg-gradient-to-r from-transparent via-purple-500/10 to-transparent rounded-lg"></div>
            {[1, 2, 3, 4, 5].map((stage) => (
                <img
                    src={`/images/luca-${stage}.png`}
                    alt={`LUCA Stage ${stage}`}
                    class={`absolute top-0 left-0 w-full h-full object-contain transition-all duration-500 pixel-perfect ${stage === 1 ? 'opacity-100 scale-100' : 'opacity-0 scale-95'}`}
                    data-stage={stage}
                />
            ))}
        </div>

        <!-- Progress Bar -->
        <div class="w-full max-w-xs mx-auto">
            <div class="pixel-border p-1 bg-black/40">
                <div class="bg-black/80 h-4 overflow-hidden">
                    <div id="progress" class="progress-bar h-full w-[20%] transition-all duration-1000 progress-glow"></div>
                </div>
            </div>
        </div>

        <!-- CTA Button -->
        <div class="text-center pt-4">
            <a 
                href="#buy" 
                class="inline-block pixel-button py-4 px-16 text-xl hover:scale-105"
            >
                Get $LUCA
            </a>
        </div>
    </div>
</section>

<style>
.particles {
    background: transparent;
    background-image: 
        radial-gradient(white 1px, transparent 1px),
        radial-gradient(white 1px, transparent 1px);
    background-size: 50px 50px;
    background-position: 0 0, 25px 25px;
    animation: particleAnimation 150s linear infinite;
}

@keyframes particleAnimation {
    from {
        transform: translate(0, 0);
    }
    to {
        transform: translate(-50px, -50px);
    }
}

.progress-bar {
    background: linear-gradient(90deg, 
        rgba(236, 72, 153, 1) 0%,
        rgba(168, 85, 247, 1) 50%,
        rgba(236, 72, 153, 1) 100%
    );
    background-size: 200% 100%;
    animation: gradientMove 2s linear infinite;
}

@keyframes gradientMove {
    0% { background-position: 100% 0%; }
    100% { background-position: -100% 0%; }
}
</style>

<script>
    let currentStage = 1;
    const totalStages = 5;
    const progressElement = document.getElementById('progress') as HTMLElement;
    let currentProgress = 20; // Starting progress percentage

    function updateLUCAState(progress: number) {
        const stage = Math.ceil((progress / 100) * totalStages);
        
        if (stage !== currentStage) {
            currentStage = stage;
            document.querySelectorAll('[data-stage]').forEach((element) => {
                const img = element as HTMLElement;
                const imgStage = parseInt(img.dataset.stage || '1');
                if (imgStage === stage) {
                    img.style.opacity = '1';
                    img.style.transform = 'scale(1)';
                    img.style.filter = 'drop-shadow(0 0 15px rgba(255, 0, 255, 0.5))';
                } else {
                    img.style.opacity = '0';
                    img.style.transform = 'scale(0.95)';
                    img.style.filter = 'none';
                }
            });
        }
    }

    // Simulate progress increase
    function incrementProgress() {
        if (currentProgress < 100) {
            currentProgress += 1;
            progressElement.style.width = `${currentProgress}%`;
            updateLUCAState(currentProgress);
        }
    }

    // Update progress every 3 seconds
    setInterval(incrementProgress, 3000);

    // Initialize with starting state
    updateLUCAState(currentProgress);
</script>
